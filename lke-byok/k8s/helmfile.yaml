repositories:
  - name: "prometheus-community"
    url: "https://prometheus-community.github.io/helm-charts"
  - name: traefik
    url: https://helm.traefik.io/traefik
  - name: jetstack
    url: https://charts.jetstack.io
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: autoscaler
    url: https://kubernetes.github.io/autoscaler
  - name: eks
    url: https://aws.github.io/eks-charts
  - name: datadog
    url: https://helm.datadoghq.com
  - name: "grafana"
    url: "https://grafana.github.io/helm-charts"
  - name: kedacore
    url: https://kedacore.github.io/charts

releases:
  - name: prometheus
    namespace: prometheus
    chart: prometheus-community/prometheus
    version: 15.10.1
    values:
      - server:
          persistentVolume:
            size: 20Gi
          strategy:
            type: Recreate
          resources:
            limits:
              cpu: 400m
              memory: 1000Mi
            requests:
              cpu: 400m
              memory: 1000Mi
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.middlewares: "traefik-zeet-auth@kubernetescrd"
            hosts:
              - zeet-prometheus.{{ requiredEnv "CLUSTER_DOMAIN" }}
            tls:
              - hosts:
                  - zeet-prometheus.{{ requiredEnv "CLUSTER_DOMAIN" }}
        nodeExporter:
          tolerations:
            - effect: "NoSchedule"
              operator: "Exists"
        alertmanager:
          strategy:
            type: Recreate
        kube-state-metrics:
          metricLabelsAllowlist:
            - 'pods=[*]'
  - name: cert-manager
    namespace: cert-manager
    chart: jetstack/cert-manager
    version: 1.9.1
    values:
      - installCRDs: true
        serviceAccount:
          name: cert-manager 
        securityContext:
          runAsNonRoot: true
          fsGroup: 1001 # required for service account token
  - name: external-dns
    namespace: kube-system
    chart: bitnami/external-dns
    version: 6.5.6
    values:
    - image:
        repository: zeetco/external-dns
        tag: eb3568d9-4f78-46dd-b355-e8f9ccb5ea33-e1f27e93-91ce-47d5-a3ea-8a7332a21d6b
      serviceAccount:
        name: external-dns
      sources:
        - service
      publishHostIP: true
      txtOwnerId: external-dns
      domainFilters:
        - {{ requiredEnv "CLUSTER_DOMAIN" }}
      provider: linode 
      linode:
        apiToken: {{ requiredEnv "LINODE_TOKEN" }}
  - name: metrics-server
    namespace: kube-system
    chart: bitnami/metrics-server
    version: 6.0.7
    values:
    - tolerations:
        - effect: NoSchedule
          operator: "Equal"
          key: zeet.co/dedicated
          value: system
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits:
          cpu: 100m
          memory: 200Mi
      apiService:
        create: true
      extraArgs:
        - --kubelet-insecure-tls=true
        - --kubelet-preferred-address-types=InternalIP 
  - name: keda
    namespace: keda
    chart: kedacore/keda
    version: 2.7.2
  - name: traefik
    namespace: traefik
    chart: traefik/traefik
    version: 12.0.7
    values:
      - deployment:
          replicas: 2
          terminationGracePeriodSeconds: 180
        service:
          annotations:
            service.beta.kubernetes.io/linode-loadbalancer-proxy-protocol: v2
            external-dns.alpha.kubernetes.io/hostname: {{ requiredEnv "CLUSTER_DOMAIN" }}.,*.{{ requiredEnv "CLUSTER_DOMAIN" }}.
        additionalArguments:
          - --entryPoints.web.proxyProtocol.trustedIPs=10.0.0.0/8
          - --entryPoints.websecure.proxyProtocol.trustedIPs=10.0.0.0/8
        ingressClass:
          enabled: true
        logs:
          general:
            level: FATAL
          access:
            enabled: true
        resources:
          limits:
            cpu: 0.2
            memory: 0.4Gi
          requests:
            cpu: 0.2
            memory: 0.4Gi
        autoscaling:
          enabled: true
          minReplicas: 2
          maxReplicas: 10
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 70
          - type: Resource
            resource:
              name: memory
              target:
                type: Utilization
                averageUtilization: 70